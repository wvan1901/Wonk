package inputs

import "maps"

type ButtonOptions struct {
	Text     string
	Varient  string
	Disabled bool
	Htmx     HtmxOptions
}

type HtmxOptions struct {
	HxGet     *string
	HxTarget  *string
	HxSwap    *string
	HxPushUrl *string
}

func (b *ButtonOptions) TemplAttributes() templ.Attributes {
	tmplAttr := templ.Attributes{}
	if b.Disabled {
		tmplAttr["disabled"] = b.Disabled
	}

	btnClasses := " uppercase font-bold py-2 px-4 rounded my-2 w-full disabled:bg-stone-400 disabled:text-white"
	switch b.Varient {
	case "contained":
		tmplAttr["class"] = "bg-varient-primary hover:bg-varient-primary-hover text-bg-main" + btnClasses
	case "text":
		tmplAttr["class"] = "bg-transparent text-varient-primary hover:border hover:border-varient-primary" + btnClasses
	case "outline":
		tmplAttr["class"] = "bg-transparent text-varient-primary border border-varient-primary hover:bg-varient-primary/10" + btnClasses
	default:
		tmplAttr["class"] = "bg-varient-primary hover:bg-varient-primary-hover text-bg-main" + btnClasses
	}

	htmxAttr := b.Htmx.TemplAttributes()

	maps.Copy(tmplAttr, htmxAttr)

	return tmplAttr
}

func (h *HtmxOptions) TemplAttributes() templ.Attributes {
	tmplAttr := templ.Attributes{}
	if h.HxGet != nil {
		tmplAttr["hx-get"] = h.HxGet
	}
	if h.HxTarget != nil {
		tmplAttr["hx-target"] = h.HxTarget
	}
	if h.HxSwap != nil {
		tmplAttr["hx-swap"] = h.HxSwap
	}
	if h.HxPushUrl != nil {
		tmplAttr["hx-push-url"] = h.HxPushUrl
	}
	return tmplAttr
}

templ Button(opts ButtonOptions) {
	<button { opts.TemplAttributes()... }>
		{ opts.Text }
	</button>
}
