package views

templ LoginPage(formData LoginFormData) {
<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="UTF-8">
	<title>Prine</title>
	<link rel="stylesheet" href="css">
	<script src="/static/script/htmx.min.js"></script>
</head>

<body>
	<script>
		document.body.addEventListener('htmx:beforeSwap', function (evt) {
			if (evt.detail.xhr.status === 404) {
				// alert the user when a 404 occurs (maybe use a nicer mechanism than alert())
				alert("Error: Could Not Find Resource");
			} else if (evt.detail.xhr.status === 422) {
				// allow 422 responses to swap as we are using this as a signal that
				// a form was submitted with bad data and want to rerender with the errors
				// set isError to false to avoid error logging in console
				evt.detail.shouldSwap = true;
				evt.detail.isError = false;
			}
		});
	</script>
	@Login(formData)
</body>

</html>
}

templ Login(formData LoginFormData) {
<div id="login-div">
	<h1>Login</h1>
	@LoginForm(formData)
	<button hx-get="/signup">
		Sign Up
	</button>
</div>
}

type LoginFormData struct {
Username string
FormErr *string
}
templ LoginForm(formData LoginFormData) {
<form hx-swap="outerHTML" hx-post="/login">
	<label for="username">Username:</label>
	<input id="username" type="text" name="username" required value={formData.Username}>
	<label for="password">Password:</label>
	<input id="password" type="password" name="password" required>
	<button>
		Login
	</button>
	if formData.FormErr != nil {
	<div class="text-red-700">{*formData.FormErr}</div>
	}

</form>
}
